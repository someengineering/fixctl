name: Build and Release Binaries
on:
  workflow_run:
    workflows:
      - "Run Go Tests"
    types:
      - completed
    branches:
      - main
jobs:
  check_if_tag:
    runs-on: ubuntu-latest
    outputs:
      is_tag: ${{ steps.tag_check.outputs.is_tag }}
    steps:
      - name: Check if triggered by a tag
        id: tag_check
        run: echo "is_tag=${{ github.event.workflow_run.head_branch == 'refs/tags/*.*.*' }}" >> $GITHUB_OUTPUT
  build:
    needs: check_if_tag
    if: needs.check_if_tag.outputs.is_tag == 'true'
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: [1.22]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Check out code
        uses: actions/checkout@v4
      - name: Build binary (non-macOS)
        if: matrix.os != 'macos-latest'
        run: go build -o ${{ github.workspace }}/release/fixctl-${{ matrix.os }}-${{ github.ref_name }} .
        shell: bash
      - name: Build binary (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          GOARCH=amd64 go build -o ${{ github.workspace }}/release/fixctl-${{ matrix.os }}-amd64-${{ github.ref_name }}
          GOARCH=arm64 go build -o ${{ github.workspace }}/release/fixctl-${{ matrix.os }}-arm64-${{ github.ref_name }}
          lipo -create -output ${{ github.workspace }}/release/fixctl-${{ matrix.os }}-universal-${{ github.ref_name }} ${{ github.workspace }}/release/fixctl-${{ matrix.os }}-amd64-${{ github.ref_name }} ${{ github.workspace }}/release/fixctl-${{ matrix.os }}-arm64-${{ github.ref_name }}
        shell: bash
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fixctl-${{ matrix.os }}-${{ github.ref_name }}
          path: ${{ github.workspace }}/release/
